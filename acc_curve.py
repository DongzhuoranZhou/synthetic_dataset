import matplotlib.pyplot as plt
import numpy as np


# def acc_curve(acc_list,layer_list, save_path=None):
#     plt.figure()
#     plt.plot(acc_list,layer_list)
#     plt.xlabel("#layer")
#     plt.ylabel("acc")
#     plt.title("acc curve")
#     if save_path:
#         plt.savefig(save_path)
#     plt.show(block=False)
#     return plt
#
#
#
#
# def acc_curve_with_covariance(accuracy, covariance):
#     x = np.linspace(0, 1, 100)  # 创建一个包含100个点的线性空间
#     y = accuracy * np.exp(-0.5 * ((x - 0.5) / covariance) ** 2)  # 根据准确率和协方差计算曲线上的y值
#
#     plt.plot(x, y)  # 绘制准确率曲线
#     plt.xlabel('Threshold')  # 设置x轴标签
#     plt.ylabel('Accuracy')  # 设置y轴标签
#     plt.title('Accuracy Curve with Covariance')  # 设置图表标题
#     plt.grid(True)  # 添加网格线
#     plt.show()  # 显示图表
#
# # 示例用法
# accuracy = 0.8
# covariance = 0.2
# acc_curve_with_covariance(accuracy, covariance)
import torch


def plot_accuracy_curve_with_covariance(list_container, save_path=None,acc_type='test'):
    colors = [
        '#008080', '#420420', '#7fe5f0', '#065535',
        '#ffd700', '#ffc0cb', '#bada55',
    ]
    colors = [('blue', 'lightblue'), ('green', 'lightgreen'), ('red', 'pink'), ('black', 'gray'),
              ('yellow', 'lightyellow'), ('purple', 'violet'), ('orange', 'yellow'), ('brown', 'pink'),
              ('gray', 'lightgray'), ('pink', 'lightpink'), ('violet', 'brown')]
    for index, container in enumerate(list_container):
        mean_color, std_color = colors[index]
        accuracy = container.accuracy
        covariance = container.covariance
        num_layer = container.num_layer
        x = np.array(num_layer)
        mean = np.array(accuracy)
        std = np.sqrt(np.array(covariance))

        plt.plot(x, mean, color=mean_color, label=container.label + '_Accuracy')
        plt.fill_between(x, mean - std, mean + std, color=std_color, alpha=0.3, label=container.label + '_Covariance')
    plt.xlabel('Epoch')
    plt.ylabel('Accuracy')
    plt.title('Accuracy Curve of GCN with Covariance with single split')
    plt.legend()
    plt.grid(True)
    if save_path:
        plt.savefig(save_path)
    plt.show(block=False)
    return plt

def plot_train_test_accuracy_curve_with_covariance(list_container, save_path=None,acc_type_list=None,title=None):
    # colors = [
    #     '#008080', '#420420', '#7fe5f0', '#065535',
    #     '#ffd700', '#ffc0cb', '#bada55',
    # ]
    colors = [('blue', 'lightblue'), ('green', 'lightgreen'), ('red', 'pink'), ('black', 'gray'),
              ('yellow', 'purple'), ('purple', 'violet'), ('orange', 'yellow'), ('brown', 'pink'),
              ('gray', 'lightgray'), ('pink', 'lightpink'), ('violet', 'brown')]
    if type(acc_type_list) == str:
        acc_type_list = [acc_type_list]
    if len(acc_type_list) == 1:
        single_acc_type = True
    else:
        single_acc_type = False
    for index, container in enumerate(list_container):
        # mean_color, std_color = colors[index]
        if single_acc_type:
            mean_color, std_color = colors[index]
            accuracy = getattr(container, "{}_accuracy".format(acc_type_list[0]))
            covariance = getattr(container, "{}_covariance".format(acc_type_list[0]))
            num_layer = container.num_layer
            x = np.array(num_layer)
            mean = np.array(accuracy)
            std = np.sqrt(np.array(covariance))
            plt.plot(x, mean, color=mean_color, label=container.label + '_' + acc_type_list[0] + '_Accuracy')
            plt.fill_between(x, mean - std, mean + std, color=std_color, alpha=0.3,
                             label=container.label + '_Covariance')
        else:
            for index_acc, acc_type in enumerate(acc_type_list):
                print("index",index)
                print("index_acc",index_acc)
                print("index*2+index_acc",index*2+index_acc)
                mean_color, std_color = colors[index*2+index_acc]
                accuracy = getattr(container, "{}_accuracy".format(acc_type))
                covariance = getattr(container, "{}_covariance".format(acc_type))
                num_layer = container.num_layer
                x = np.array(num_layer)
                mean = np.array(accuracy)
                std = np.sqrt(np.array(covariance))
                plt.plot(x, mean, color=mean_color, label=container.label + '_' + acc_type + '_Accuracy')
                plt.fill_between(x, mean - std, mean + std, color=std_color, alpha=0.3, label=container.label + '_Covariance')
    plt.xlabel('Epoch')
    plt.ylabel('Accuracy')
    plt.title(title)
    plt.legend()
    plt.grid(True)
    if save_path:
        plt.savefig(save_path)
    plt.show(block=False)
    return plt


class DataContainer:
    def __init__(self, num_layer, accuracy, covariance, label=None):
        self.num_layer = num_layer
        self.accuracy = accuracy
        self.covariance = covariance
        self.label = label

class TrainTestDataContainer:
    def __init__(self, num_layer, train_accuracy, train_covariance, test_accuracy, test_covariance, label=None):
        self.num_layer = num_layer
        self.train_accuracy = train_accuracy
        self.train_covariance = train_covariance
        self.test_accuracy = test_accuracy
        self.test_covariance = test_covariance
        self.label = label

def plot_data_preprocess(acc_list, layer_list, label=None):
    mean_train_acc_list = []
    std_train_acc_list = []
    mean_test_acc_list = []
    std_test_acc_list = []
    for num_layer in layer_list:
        (mean_train_acc, std_train_acc, mean_test_acc, std_test_acc) = acc_list[num_layer]
        mean_train_acc_list.append(mean_train_acc)
        std_train_acc_list.append(std_train_acc)
        mean_test_acc_list.append(mean_test_acc)
        std_test_acc_list.append(std_test_acc)
    num_layer = layer_list
    # container = DataContainer(num_layer, mean_test_acc_list, std_test_acc_list, label=label)
    container = TrainTestDataContainer(num_layer, mean_train_acc_list, std_train_acc_list,mean_test_acc_list,std_test_acc_list, label=label)
    return container

if __name__ == '__main__':

    # test_SGC_acc_list = {4: (0.6031666666666666, 0.4860453796829171, 0.6025, 0.48685213360937424), 6: (0.607, 0.48139859899163717, 0.6045, 0.4844388506302937), 8: (0.6645, 0.40982740269532975, 0.657, 0.4172601107223168), 10: (0.6753333333333332, 0.30084769125478317, 0.6740000000000002, 0.2786736442507616), 11: (0.6491666666666667, 0.20039336316355388, 0.6289999999999999, 0.2243746866293076), 12: (0.591, 0.12864831475339616, 0.5995, 0.1447618734335806), 13: (0.5579999999999999, 0.08957089060874877, 0.56, 0.09352807065261208), 14: (0.5369999999999999, 0.04725991959366836, 0.5315, 0.04468221122549777), 15: (0.531, 0.03036994127971493, 0.529, 0.0371012129181783), 16: (0.5096666666666667, 0.018978057505094313, 0.514, 0.026296387584609424), 32: (0.5003333333333334, 0.0045521667612492284, 0.5049999999999999, 0.01565247584249852)}
    # test_SGC_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    # test_SGC_TrainTestDataContainer = plot_data_preprocess(test_SGC_acc_list, test_SGC_num_layer, label='test_SGC')


    # # single split GCN hdim 16
    # GCN_acc_dict = {4: (1.0, 0.0, 1.0, 0.0), 6: (1.0, 0.0, 1.0, 0.0), 8: (1.0, 0.0, 1.0, 0.0), 10: (0.9970000000000001, 0.0012472191289246374, 0.9925, 0.0031622776601683646), 11: (0.9668333333333333, 0.0032231799343022975, 0.969, 0.004062019202317962), 12: (0.8880000000000001, 0.005691123692987942, 0.8870000000000001, 0.02575849374478251), 13: (0.756, 0.0035512126254437573, 0.75, 0.012449899597988716), 14: (0.6546666666666667, 0.010200762498732906, 0.651, 0.027820855486487092), 15: (0.5970000000000001, 0.004428443418528813, 0.5780000000000001, 0.012288205727444499), 16: (0.552, 0.011506037062728802, 0.5315, 0.01178982612255161), 32: (0.5003333333333334, 0.0045521667612492284, 0.5049999999999999, 0.01565247584249852)}
    # GCN_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    # GCN_TrainTestDataContainer = plot_data_preprocess(GCN_acc_dict, GCN_num_layer, label='GCN')
    #
    # # single split GCN hdim 16
    # GAT_acc_dict = {4: (1.0, 0.0, 1.0, 0.0), 6: (0.9913333333333334, 0.017333333333333336, 0.9894999999999999, 0.020999999999999998), 8: (0.9918333333333333, 0.004484541349024567, 0.9834999999999999, 0.010198039027185565), 10: (0.8971666666666668, 0.19859828241396696, 0.8915, 0.19585453785909585), 11: (0.9966666666666667, 0.003836954811073786, 0.9905000000000002, 0.0029154759474226757), 12: (0.852, 0.1745475102467329, 0.8505, 0.16716309401300278), 13: (0.8946666666666667, 0.19701283094142763, 0.8925000000000001, 0.19648791311426766), 14: (0.797, 0.24250864818485224, 0.795, 0.24092011124022006), 15: (0.6980000000000001, 0.24354933335523174, 0.7064999999999999, 0.2357413837237747), 16: (0.5993333333333333, 0.19950661364698885, 0.5980000000000001, 0.1972523764115404), 32: (0.5015000000000001, 0.003887301263230194, 0.5005, 0.0009999999999999788)}
    # GAT_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    # GAT_TrainTestDataContainer = plot_data_preprocess(GAT_acc_dict, GAT_num_layer, label='GAT')


    # single split GCN hdim 16 from cluster
    GCN_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    GCN_acc_dict = {4: (1.0, 0.0, 1.0, 0.0), 6: (1.0, 0.0, 1.0, 0.0), 8: (1.0, 0.0, 1.0, 0.0), 10: (1.0, 0.0, 1.0, 0.0), 11: (0.9094999999999999, 0.181, 0.9135, 0.173), 12: (0.8, 0.2449489742783178, 0.8, 0.2449489742783178), 13: (0.6, 0.20000000000000004, 0.6, 0.20000000000000004), 14: (0.5, 0.0, 0.5, 0.0), 15: (0.5, 0.0, 0.5, 0.0), 16: (0.5, 0.0, 0.5, 0.0), 32: (0.5, 0.0, 0.5, 0.0)}
    GCN_TrainTestDataContainer = plot_data_preprocess(GCN_acc_dict, GCN_num_layer, label='GCN')

    GCN_fixed_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    GCN_fixed_acc_dict = {4: (0.9998333333333334, 0.000333333333333341, 1.0, 0.0), 6: (0.9991666666666668, 1.1102230246251565e-16, 1.0, 0.0), 8: (0.9993333333333334, 0.000333333333333341, 1.0, 0.0), 10: (0.8995, 0.19975026074242472, 0.9, 0.20000000000000004), 11: (0.6026666666666667, 0.19830489992265277, 0.6005, 0.19975234666956984), 12: (0.5003333333333334, 0.000666666666666682, 0.5005, 0.0009999999999999788), 13: (0.5, 0.0, 0.5005, 0.0009999999999999788), 14: (0.5, 0.0, 0.5, 0.0), 15: (0.5, 0.0, 0.5, 0.0), 16: (0.5, 0.0, 0.5, 0.0), 32: (0.5, 0.0, 0.5, 0.0)}
    GCN_fixed_TrainTestDataContainer = plot_data_preprocess(GCN_fixed_acc_dict, GCN_fixed_num_layer, label='GCN')


    # single split GCN hdim 16 from cluster
    GCN_hdim64_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    GCN_hdim64_acc_dict = {4: (1.0, 0.0, 1.0, 0.0), 6: (1.0, 0.0, 1.0, 0.0), 8: (1.0, 0.0, 1.0, 0.0), 10: (1.0, 0.0, 1.0, 0.0), 11: (0.7993333333333333, 0.24576773135987115, 0.8015000000000001, 0.2431234254447728), 12: (0.6036666666666667, 0.19829383360166405, 0.607, 0.19696700231257008), 13: (0.5, 0.0, 0.5, 0.0), 14: (0.5, 0.0, 0.5, 0.0), 15: (0.5, 0.0, 0.5, 0.0), 16: (0.5, 0.0, 0.5, 0.0), 32: (0.5, 0.0, 0.5, 0.0)}
    GCN_hdim64_TrainTestDataContainer = plot_data_preprocess(GCN_hdim64_acc_dict, GCN_hdim64_num_layer, label='GCN_hdim64')

    # single split GCN hdim 16 from cluster
    GCN_hdim8_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    GCN_hdim8_acc_dict = {4: (0.9996666666666666, 0.000666666666666682, 0.9995, 0.0009999999999999788), 6: (0.9996666666666666, 0.0004082482904638724, 0.9995, 0.0009999999999999788), 8: (0.9996666666666666, 0.0004082482904638724, 0.9995, 0.0009999999999999788), 10: (0.9991666666666668, 0.001054092553389449, 1.0, 0.0), 11: (0.9996666666666666, 0.00040824829046387246, 0.999, 0.001224744871391563), 12: (0.7998333333333333, 0.24481308062365548, 0.8, 0.2449489742783178), 13: (0.7, 0.2449489742783178, 0.6995, 0.2443378808126157), 14: (0.5026666666666666, 0.005333333333333323, 0.504, 0.008000000000000007), 15: (0.5, 0.0, 0.5, 0.0), 16: (0.5, 0.0, 0.5, 0.0), 32: (0.5, 0.0, 0.5, 0.0)}
    GCN_hdim8_TrainTestDataContainer = plot_data_preprocess(GCN_hdim8_acc_dict, GCN_hdim8_num_layer, label='GCN_hdim8')

    # single split GCN hdim 16 from cluster
    GCN_hdim1_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    GCN_hdim1_acc_dict = {4: (0.9964999999999999, 0.003223179934302279, 0.9955, 0.004582575694955826), 6: (0.9941666666666666, 0.00801040989379862, 0.9945, 0.008717797887081333), 8: (0.8286666666666667, 0.07939633352855646, 0.8240000000000001, 0.07657675887630656), 10: (0.692, 0.04560884417157125, 0.6914999999999999, 0.04143066497173321), 11: (0.5934999999999999, 0.07802670483024814, 0.581, 0.06858571279792901), 12: (0.5845, 0.07248103200148298, 0.584, 0.07026023057178221), 13: (0.5, 0.0, 0.5, 0.0), 14: (0.5, 0.0, 0.5, 0.0), 15: (0.5083333333333333, 0.016666666666666653, 0.496, 0.008000000000000007), 16: (0.5, 0.0, 0.5, 0.0), 32: (0.5, 0.0, 0.5, 0.0)}
    GCN_hdim1_TrainTestDataContainer = plot_data_preprocess(GCN_hdim1_acc_dict, GCN_hdim1_num_layer, label='GCN_hdim1')

    # single split GCN with PN hdim 16 from cluster
    GCN_PN_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    GCN_PN_acc_dict = {4: (1.0, 0.0, 1.0, 0.0), 6: (1.0, 0.0, 1.0, 0.0), 8: (1.0, 0.0, 1.0, 0.0), 10: (1.0, 0.0, 1.0, 0.0), 11: (0.9490000000000001, 0.0803834560093058, 0.945, 0.08296083413274), 12: (0.7276666666666667, 0.24689932721208005, 0.7385, 0.24024778875153047), 13: (0.8996666666666666, 0.19983368084484657, 0.8985, 0.20175232340669588), 14: (0.8176666666666668, 0.27238371626969354, 0.805, 0.2766541161811984), 15: (0.6679999999999999, 0.20755226918644962, 0.6665, 0.20721727727194952), 16: (0.49333333333333335, 0.0020412414523193214, 0.505, 0.016431676725154977), 32: (0.4993333333333333, 0.003628590176179549, 0.493, 0.01653783540854121)}
    GCN_PN_TrainTestDataContainer = plot_data_preprocess(GCN_PN_acc_dict, GCN_PN_num_layer, label='GCN_PN')

    # single split GCN with BN hdim 16 from cluster
    GCN_BN_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    GCN_BN_acc_dict = {4: (1.0, 0.0, 1.0, 0.0), 6: (1.0, 0.0, 1.0, 0.0), 8: (1.0, 0.0, 1.0, 0.0), 10: (1.0, 0.0, 1.0, 0.0), 11: (0.9795, 0.041000000000000016, 0.9800000000000001, 0.03999999999999999), 12: (0.9981666666666665, 0.0029059326290270964, 0.9975000000000002, 0.0031622776601683646), 13: (0.8998333333333333, 0.19991692719171578, 0.8995000000000001, 0.1997523466695698), 14: (0.6995, 0.24535892076710802, 0.6990000000000001, 0.24577225229874913), 15: (0.4995, 0.0010000000000000009, 0.5, 0.0), 16: (0.4998333333333333, 0.000333333333333341, 0.5, 0.0), 32: (0.5, 0.0, 0.501, 0.0020000000000000018)}
    GCN_BN_TrainTestDataContainer = plot_data_preprocess(GCN_BN_acc_dict, GCN_BN_num_layer, label='GCN_BN')

    # single split GAT with BN 16 from cluster
    GAT_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 18,20,22,24,26,28,30, 32]
    GAT_acc_dict = {4: (1.0, 0.0, 1.0, 0.0), 6: (0.992500000, 0.015000000, 0.992000000, 0.016000000), 8: (0.992666667,0.007195678, 0.984500000, 0.013546217), 10: (0.8973333333, 0.198670162, 0.889000000, 0.194618858), 11: (0.996833333, 0.001333333,  0.989500000, 0.009137833), 12: (0.820333333, 0.217098032, 0.816500000, 0.209723628), 13: (0.903500000,0.181778559, 0.904000000, 0.173274349), 14: (0.804666667, 0.232136574,0.801500000, 0.2361281436), 15: ( 0.699333333, 0.243117141 , 0.698500000, 0.243113142), 16: (0.596333333, 0.201078757, 0.598500000, 0.197025379), 18: (0.2773333333333333, 0.19953724241632467, 0.27599999999999997, 0.19744999366928326), 20: (0.3091666666666667, 0.23417111502299148, 0.31100000000000005, 0.23212927432790548), 22: (0.005833333333333334, 0.010461569884316811, 0.006, 0.012), 24: (0.13233333333333336, 0.18588631531724498, 0.1325, 0.1864604515708358), 26: (0.21916666666666668, 0.23037047457422913, 0.2225, 0.23027157879338905), 28: (0.22049999999999997, 0.22538769068232437, 0.23199999999999998, 0.23641806191575127), 30: (0.22400000000000003, 0.20385343318723434, 0.2285, 0.20707245108898478),32: (0.501458333,0.005013004, 0.497500000, 0.009185587)}
    GAT_TrainTestDataContainer = plot_data_preprocess(GAT_acc_dict, GAT_num_layer, label='GAT')
    GAT_BN_separate_num_layer = [2, 3, 4, 5, 6,7, 8, 10, 11, 12, 13, 14, 15, 16]
    GAT_BN_separate_acc_dict = {2: (0.5058333333333332, 0.006932211447695173, 0.49749999999999994, 0.008803408430829487), 3: (1.0, 0.0, 1.0, 0.0), 4: (1.0, 0.0, 1.0, 0.0), 5: (1.0, 0.0, 1.0, 0.0), 6: (1.0, 0.0, 1.0, 0.0), 7: (1.0, 0.0, 1.0, 0.0), 8: (1.0, 0.0, 1.0, 0.0), 10: (0.9941666666666666, 0.009036961141150632, 0.9964999999999999, 0.0043588989435406665), 11: (0.9984999999999999, 0.0029999999999999805, 0.998, 0.0040000000000000036), 12: (0.9921666666666666, 0.015666666666666672, 0.9925, 0.01499999999999999), 13: (0.8678333333333332, 0.1939054752536228, 0.8699999999999999, 0.1935264839757081), 14: (0.6976666666666667, 0.24414840659820913, 0.7030000000000001, 0.23959027526174764), 15: (0.787, 0.233645981014963, 0.7865, 0.23727410309597632), 16: (0.593, 0.18726585380148728, 0.5995, 0.18783237207680684)}
    (GAT_BN_separate_num_layer, GAT_BN_separate_acc_dict) = torch.load('logs/test21_reproduce_GATBN_quich_changing_depth/GAT_3_4_5_6_7_8_10_11_12_13_14_15_16_18_20_22_24_26_28_30_32layers_syn2_summary.pt')
    GAT_BN_separate_TrainTestDataContainer = plot_data_preprocess(GAT_BN_separate_acc_dict, GAT_BN_separate_num_layer, label='GATBN_separate')


    # single split GAT with BN 16 from cluster
    GAT_BN_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 18,20,22,24,26,28,30, 32]
    GAT_BN_acc_dict = {4: (1.0, 0.0, 1.0, 0.0), 6: (1.0, 0.0, 1.0, 0.0), 8: (1.0, 0.0, 1.0, 0.0), 10: (0.9623333333333333, 0.07533333333333334, 0.9629999999999999, 0.07400000000000002), 11: (0.9995, 0.0009999999999999788, 1.0, 0.0), 12: (0.9515, 0.054719994314489644, 0.9465, 0.06042764268114387), 13: (0.9345000000000001, 0.12892676646496304, 0.9324999999999999, 0.13002884295416922), 14: (0.9209999999999999, 0.054286789880739435, 0.9205, 0.05023445033042566), 15: (0.8706666666666667, 0.1366904450858866, 0.8755000000000001, 0.13274411474713296), 16: (0.8788333333333332, 0.08881097279553292, 0.8905, 0.09463614531456785), 18: (0.5, 0.0, 0.5, 0.0), 20: (0.5, 0.0, 0.5, 0.0), 22: (0.5, 0.0, 0.5, 0.0), 24: (0.5, 0.0, 0.5, 0.0), 26: (0.5, 0.0, 0.5, 0.0), 28: (0.5, 0.0, 0.5, 0.0), 30: (0.5, 0.0, 0.5, 0.0),32: (0.5, 0.0, 0.5, 0.0)}
    GAT_BN_TrainTestDataContainer = plot_data_preprocess(GAT_BN_acc_dict, GAT_BN_num_layer, label='GAT_BN')

    GAT_BN_hdim64_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    GAT_BN_hdim64_acc_dict = {4: (1.0, 0.0, 1.0, 0.0), 6: (1.0, 0.0, 1.0, 0.0), 8: (1.0, 0.0, 1.0, 0.0), 10: (1.0, 0.0, 1.0, 0.0), 11: (0.9343333333333333, 0.07950436745515586, 0.9355, 0.08271033792700885), 12: (0.9418333333333333, 0.04099254674802346, 0.9475, 0.03965476011779672), 13: (0.8078333333333333, 0.1610888298769071, 0.8085000000000001, 0.16323755695304928), 14: (0.9045, 0.1392964464729808, 0.9019999999999999, 0.14891608375189028), 15: (0.8416666666666668, 0.15148615631652798, 0.8455, 0.1507846145997661), 16: (0.6683333333333332, 0.13653957505264017, 0.6495, 0.13552121605121462), 32: (0.5, 0.0, 0.5, 0.0)}
    GAT_BN_hdim64_TrainTestDataContainer = plot_data_preprocess(GAT_BN_hdim64_acc_dict, GAT_BN_hdim64_num_layer, label='GAT_BN_hdim64')

    GAT_BN_hdim8_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 18,20,22,24,26,28,30, 32]
    GAT_BN_hdim8_acc_dict =  {4: (1.0, 0.0, 1.0, 0.0), 6: (0.9998333333333334, 0.000333333333333341, 0.9995, 0.0009999999999999788), 8: (0.9996666666666666, 0.00040824829046387246, 0.999, 0.001224744871391563), 10: (0.9788333333333334, 0.04067691127791185, 0.982, 0.03355592347112502), 11: (0.9476666666666667, 0.04545877253072284, 0.9395, 0.046513438918230926), 12: (0.8921666666666667, 0.07123240523494598, 0.8950000000000001, 0.06853831045481058), 13: (0.8766666666666667, 0.07938128802739902, 0.868, 0.07698051701567095), 14: (0.7875, 0.14444626067234217, 0.7925, 0.14743642697786732), 15: (0.7558333333333334, 0.21286145729088674, 0.758, 0.2141226284165221), 16: (0.7726666666666666, 0.14432736708223043, 0.778, 0.14901677757890217), 18: (0.5, 0.0, 0.5, 0.0), 20: (0.5, 0.0, 0.5, 0.0), 22: (0.5, 0.0, 0.5, 0.0), 24: (0.5, 0.0, 0.5, 0.0), 26: (0.5, 0.0, 0.5, 0.0), 28: (0.5, 0.0, 0.5, 0.0), 30: (0.5, 0.0, 0.5, 0.0),32: (0.5, 0.0, 0.5, 0.0)}
    GAT_BN_hdim8_TrainTestDataContainer = plot_data_preprocess(GAT_BN_hdim8_acc_dict, GAT_BN_hdim8_num_layer, label='GAT_BN_hdim8')

    # single split GAT with PN from cluster
    GAT_PN_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 18,20,22,24,26,28,30, 32]
    GAT_PN_acc_dict = {4: (1.0, 0.0, 1.0, 0.0), 6: (1.0, 0.0, 1.0, 0.0), 8: (1.0, 0.0, 1.0, 0.0), 10: (0.9998333333333334, 0.000333333333333341, 0.9995, 0.0009999999999999788), 11: (0.942, 0.0739493069609175, 0.9410000000000001, 0.07310266752998827), 12: (0.9121666666666666, 0.10956935905828984, 0.9115, 0.1101771301132862), 13: (0.9006666666666667, 0.09880030364325812, 0.8959999999999999, 0.09876234100101113), 14: (0.892, 0.12457773120068895, 0.891, 0.13964777119596286), 15: (0.917, 0.10219888018521098, 0.916, 0.10331505214633536), 16: (0.8203333333333334, 0.06411708040764176, 0.8335000000000001, 0.06801837986897363), 32: (0.49866666666666665, 0.0025603819159561903, 0.49899999999999994, 0.007681145747868592),18: (0.5, 0.0, 0.5, 0.0), 20: (0.5, 0.0, 0.5, 0.0), 22: (0.5, 0.0, 0.5, 0.0), 24: (0.5001666666666666, 0.000333333333333341, 0.4995, 0.0010000000000000009), 26: (0.5, 0.0, 0.5, 0.0), 28: (0.5006666666666667, 0.0013333333333333198, 0.49849999999999994, 0.0030000000000000027), 30: (0.49883333333333335, 0.002333333333333343, 0.5025000000000001, 0.004999999999999982)}
    GAT_PN_TrainTestDataContainer = plot_data_preprocess(GAT_PN_acc_dict, GAT_PN_num_layer, label='GAT_PN')

    GAT_PN_hdim64_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    GAT_PN_hdim64_acc_dict = {4: (1.0, 0.0, 1.0, 0.0), 6: (1.0, 0.0, 1.0, 0.0), 8: (1.0, 0.0, 1.0, 0.0), 10: (0.9949999999999999, 0.010000000000000009, 0.992, 0.016000000000000014), 11: (0.9751666666666667, 0.042935351919420016, 0.9734999999999999, 0.04476605857119879), 12: (0.9006666666666666, 0.09880170938692193, 0.8960000000000001, 0.10893346593219184), 13: (0.8844999999999998, 0.1481455740517114, 0.89, 0.13996428115772966), 14: (0.9083333333333334, 0.15691381215318315, 0.9115, 0.15547990223819924), 15: (0.8988333333333334, 0.1412214572931465, 0.9015000000000001, 0.12701968351401288), 16: (0.7828333333333333, 0.17804072567814364, 0.7835, 0.17863790191333978), 32: (0.5016666666666667, 0.0033747427885527435, 0.488, 0.015921683328090654)}


    GAT_PN_hdim64_TrainTestDataContainer = plot_data_preprocess(GAT_PN_hdim64_acc_dict, GAT_PN_hdim64_num_layer, label='GAT_PN_hdim64')

    GAT_PN_hdim8_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    GAT_PN_hdim8_acc_dict = {4: (0.9988333333333334, 0.0004082482904638724, 0.9984999999999999, 0.001224744871391563), 6: (0.9996666666666666, 0.0004082482904638724, 0.9995, 0.0009999999999999788), 8: (0.9996666666666666, 0.0004082482904638724, 0.999, 0.001224744871391563), 10: (0.9993333333333332, 0.0009718253158075307, 0.999, 0.0020000000000000018), 11: (0.9490000000000001, 0.10158384604737987, 0.942, 0.116), 12: (0.9998333333333334, 0.000333333333333341, 1.0, 0.0), 13: (0.9413333333333334, 0.10994518836422285, 0.9355, 0.11807201192492658), 14: (0.9870000000000001, 0.01969630535010167, 0.9894999999999999, 0.01469693845669906), 15: (0.9931666666666666, 0.013253930234714025, 0.9925, 0.013784048752090237), 16: (0.8896666666666666, 0.10089681197474312, 0.8975, 0.09303225247192504), 32: (0.49916666666666665, 0.0034560735588879477, 0.49499999999999994, 0.007245688373094715)}
    GAT_PN_hdim8_TrainTestDataContainer = plot_data_preprocess(GAT_PN_hdim8_acc_dict, GAT_PN_hdim8_num_layer, label='GAT_PN_hdim8')

    # single split GAT hdim 16 from cluster # todo missing 16
    # GAT_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    # GAT_acc_dict = {}
    # GAT_TrainTestDataContainer = plot_data_preprocess(GAT_acc_dict, GAT_num_layer, label='GAT')

    # single split DAGNN hdim 16 from cluster
    DAGNN_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    DAGNN_acc_dict = {4: (1.0, 0.0, 1.0, 0.0), 6: (1.0, 0.0, 1.0, 0.0), 8: (1.0, 0.0, 1.0, 0.0), 10: (1.0, 0.0, 1.0, 0.0), 11: (1.0, 0.0, 1.0, 0.0), 12: (1.0, 0.0, 1.0, 0.0), 13: (1.0, 0.0, 1.0, 0.0), 14: (0.9513333333333334, 0.09733333333333333, 0.9414999999999999, 0.117), 15: (0.5166666666666667, 0.010967122584241387, 0.47250000000000003, 0.011067971810589312), 16: (0.5165, 0.01008849730028102, 0.47000000000000003, 0.009082951062292462), 32: (0.5236666666666666, 0.017317300277147393, 0.4534999999999999, 0.023801260470823805)}
    DAGNN_TrainTestDataContainer = plot_data_preprocess(DAGNN_acc_dict, DAGNN_num_layer, label='DAGNN')


    # single split APPNP hdim 16 from cluster
    APPNP_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    APPNP_acc_dict = {4: (0.9978333333333333, 0.004333333333333344, 0.9974999999999999, 0.004999999999999982), 6: (0.8156666666666667, 0.14280561769217778, 0.807, 0.14011959177788097), 8: (0.5773333333333334, 0.06624743181605021, 0.576, 0.06849452532867138), 10: (0.5686666666666665, 0.07467261881037784, 0.5589999999999999, 0.060963103595535556), 11: (0.541, 0.0219620885467055, 0.5345, 0.019899748742132375), 12: (0.5188333333333334, 0.02023885152648518, 0.5085, 0.024320773014030635), 13: (0.49483333333333335, 0.0074610097618664625, 0.5135, 0.01743559577416269), 14: (0.4991666666666667, 0.0016666666666666607, 0.501, 0.0020000000000000018), 15: (0.499, 0.0054108943602493255, 0.4995, 0.011768602295939816), 16: (0.5036666666666667, 0.006381396573025558, 0.49099999999999994, 0.007516648189186461), 32: (0.30166666666666664, 0.24632859715789757, 0.2995, 0.24454242985625216)}
    APPNP_TrainTestDataContainer = plot_data_preprocess(APPNP_acc_dict, APPNP_num_layer, label='APPNP')

    # single split GPRGNN hdim 16 from cluster
    GPRGNN_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    GPRGNN_acc_dict = {4: (1.0, 0.0, 1.0, 0.0), 6: (1.0, 0.0, 1.0, 0.0), 8: (1.0, 0.0, 1.0, 0.0), 10: (1.0, 0.0, 1.0, 0.0), 11: (1.0, 0.0, 1.0, 0.0), 12: (1.0, 0.0, 1.0, 0.0), 13: (1.0, 0.0, 1.0, 0.0), 14: (1.0, 0.0, 1.0, 0.0), 15: (1.0, 0.0, 1.0, 0.0), 16: (0.8021666666666667, 0.2423276019496472, 0.7939999999999999, 0.2523420297928983), 32: (0.5066666666666666, 0.008913161304747305, 0.48250000000000004, 0.02423839928708164)}
    GPRGNN_TrainTestDataContainer = plot_data_preprocess(GPRGNN_acc_dict, GPRGNN_num_layer, label='GPRGNN')


    # single split GPRGNN hdim 16 from cluster
    GPRGNN_hdim8_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    GPRGNN_hdim8_acc_dict = {4: (0.9998333333333334, 0.000333333333333341, 1.0, 0.0), 6: (1.0, 0.0, 1.0, 0.0), 8: (0.9996666666666666, 0.00040824829046387246, 0.9995, 0.0009999999999999788), 10: (0.9996666666666666, 0.000666666666666682, 1.0, 0.0), 11: (1.0, 0.0, 0.9995, 0.0009999999999999788), 12: (1.0, 0.0, 1.0, 0.0), 13: (0.9996666666666666, 0.00040824829046387246, 0.9995, 0.0009999999999999788), 14: (0.9996666666666666, 0.000666666666666682, 0.9995, 0.0009999999999999788), 15: (1.0, 0.0, 1.0, 0.0), 16: (1.0, 0.0, 1.0, 0.0), 32: (0.5051666666666668, 0.0053333333333333245, 0.4835, 0.012903487900563938)}
    GPRGNN_hdim8_TrainTestDataContainer = plot_data_preprocess(GPRGNN_hdim8_acc_dict, GPRGNN_hdim8_num_layer, label='GPRGNN_hdim8')

    GPRGNN_hdim64_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    GPRGNN_hdim64_acc_dict = {4: (1.0, 0.0, 1.0, 0.0), 6: (1.0, 0.0, 1.0, 0.0), 8: (1.0, 0.0, 1.0, 0.0), 10: (1.0, 0.0, 1.0, 0.0), 11: (1.0, 0.0, 1.0, 0.0), 12: (1.0, 0.0, 1.0, 0.0), 13: (1.0, 0.0, 1.0, 0.0), 14: (1.0, 0.0, 1.0, 0.0), 15: (1.0, 0.0, 1.0, 0.0), 16: (0.9035, 0.193, 0.8969999999999999, 0.20599999999999996), 32: (0.5033333333333334, 0.0031180478223115948, 0.501, 0.010908712114635713)}
    GPRGNN_hdim64_TrainTestDataContainer = plot_data_preprocess(GPRGNN_hdim64_acc_dict, GPRGNN_hdim64_num_layer, label='GPRGNN_hdim64')


    # single split JKNet hdim 16 from cluster
    JKNet_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    JKNet_acc_dict =  {4: (1.0, 0.0, 1.0, 0.0), 6: (1.0, 0.0, 1.0, 0.0), 8: (1.0, 0.0, 0.9995, 0.0009999999999999788), 10: (0.9025000000000001, 0.19500000000000003, 0.9, 0.2), 11: (0.4993333333333333, 0.006757711644237756, 0.5105, 0.016232683080747927), 12: (0.5013333333333334, 0.009122621455602652, 0.493, 0.01088577052853863), 13: (0.5015, 0.01079351657246145, 0.5, 0.029283100928692646), 14: (0.5056666666666667, 0.007176350047203661, 0.48600000000000004, 0.01488287606613723), 15: (0.5011666666666666, 0.008141116494546555, 0.49799999999999994, 0.018193405398660246), 16: (0.5008333333333332, 0.009888264649460876, 0.48549999999999993, 0.01486606874731852), 32: (0.5086666666666666, 0.00718021974284601, 0.49750000000000005, 0.025739075352467493)}
    JKNet_TrainTestDataContainer = plot_data_preprocess(JKNet_acc_dict, JKNet_num_layer, label='JKNet')

    # single split SGC hdim 16 from cluster
    SGC_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    SGC_acc_dict = {4: (1.0, 0.0, 1.0, 0.0), 6: (1.0, 0.0, 1.0, 0.0), 8: (1.0, 0.0, 1.0, 0.0), 10: (0.9955, 0.00208166599946614, 0.991, 0.005147815070493501), 11: (0.9629999999999999, 0.001632993161855451, 0.9650000000000001, 0.010954451150103333), 12: (0.8768333333333335, 0.004636809247747852, 0.8695, 0.01326649916142156), 13: (0.7541666666666667, 0.005725188012439225, 0.7619999999999999, 0.015362291495737196), 14: (0.6723333333333332, 0.006980130530457292, 0.666, 0.020037464909513858), 15: (0.601, 0.00608732745591657, 0.5894999999999999, 0.014089002803605396), 16: (0.5316666666666666, 0.02793345266482066, 0.5225, 0.03037268509697487), 32: (0.5115000000000001, 0.010946841249115337, 0.47250000000000003, 0.026598872156540776)}
    SGC_TrainTestDataContainer = plot_data_preprocess(SGC_acc_dict, SGC_num_layer, label='SGC')


    # single split SGC with BN hdim 16 from cluster
    SGC_BN_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    SGC_BN_acc_dict = {4: (1.0, 0.0, 1.0, 0.0), 6: (1.0, 0.0, 1.0, 0.0), 8: (1.0, 0.0, 1.0, 0.0), 10: (0.9968333333333333, 0.0009718253158075383, 0.993, 0.00291547594742263), 11: (0.9666666666666666, 0.002635231383473647, 0.9685, 0.004636809247747873), 12: (0.8861666666666667, 0.005666666666666671, 0.89, 0.029664793948382638), 13: (0.7563333333333333, 0.005906681715556456, 0.756, 0.014195069566578379), 14: (0.6541666666666666, 0.009354143466934845, 0.6505, 0.027129319932501065), 15: (0.5974999999999999, 0.008232726023485659, 0.5734999999999999, 0.016852299546352693), 16: (0.5618333333333333, 0.014273129377337768, 0.542, 0.01777638883463116), 32: (0.5189999999999999, 0.012011568497818191, 0.4665, 0.016015617378046958)}

    SGC_BN_TrainTestDataContainer = plot_data_preprocess(SGC_BN_acc_dict, SGC_BN_num_layer, label='SGC_BN')

    # single split SGC with PN hdim 16 from cluster
    SGC_PN_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    SGC_PN_acc_dict = {4: (1.0, 0.0, 1.0, 0.0), 6: (1.0, 0.0, 1.0, 0.0), 8: (1.0, 0.0, 1.0, 0.0), 10: (0.9955, 0.00208166599946614, 0.991, 0.005147815070493501), 11: (0.9629999999999999, 0.001632993161855451, 0.9650000000000001, 0.010954451150103333), 12: (0.8768333333333335, 0.004636809247747852, 0.8695, 0.01326649916142156), 13: (0.7541666666666667, 0.005725188012439225, 0.7619999999999999, 0.015362291495737196), 14: (0.6723333333333332, 0.006980130530457292, 0.666, 0.020037464909513858), 15: (0.601, 0.00608732745591657, 0.5894999999999999, 0.014089002803605396), 16: (0.5316666666666666, 0.02793345266482066, 0.5225, 0.03037268509697487), 32: (0.5115000000000001, 0.010946841249115337, 0.47250000000000003, 0.026598872156540776)}
    SGC_PN_TrainTestDataContainer = plot_data_preprocess(SGC_PN_acc_dict, SGC_PN_num_layer, label='SGC_PN')

    # single split SGC with PN from  hdim 16 from cluster
    SGC_PN_by_DGN_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    SGC_PN_by_DGN_acc_dict = {4: (1.0, 0.0, 1.0, 0.0), 6: (1.0, 0.0, 1.0, 0.0), 8: (1.0, 0.0, 1.0, 0.0), 10: (0.9968333333333333, 0.0009718253158075383, 0.993, 0.00291547594742263), 11: (0.9666666666666666, 0.002635231383473647, 0.9685, 0.004636809247747873), 12: (0.8861666666666667, 0.005666666666666671, 0.89, 0.029664793948382638), 13: (0.7563333333333333, 0.005906681715556456, 0.756, 0.014195069566578379), 14: (0.6541666666666666, 0.009354143466934845, 0.6505, 0.027129319932501065), 15: (0.5974999999999999, 0.008232726023485659, 0.5734999999999999, 0.016852299546352693), 16: (0.5618333333333333, 0.014273129377337768, 0.542, 0.01777638883463116), 32: (0.5189999999999999, 0.012011568497818191, 0.4665, 0.016015617378046958)}
    SGC_PN_by_DGN_TrainTestDataContainer = plot_data_preprocess(SGC_PN_by_DGN_acc_dict, SGC_PN_by_DGN_num_layer, label='SGC_PN_by_DGN')

    # single split simpleGCN hdim 16 from cluster
    simpleGCN_BN_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    simpleGCN_BN_acc_dict = {4: (1.0, 0.0, 1.0, 0.0), 6: (0.9993333333333334, 0.0013333333333333196, 0.9984999999999999, 0.0029999999999999805), 8: (0.9786666666666666, 0.0017950549357114932, 0.9765, 0.00930053761886913), 10: (0.7191666666666666, 0.11028750306962859, 0.7205, 0.11159525079500471), 11: (0.6288333333333334, 0.06502264562784604, 0.6204999999999999, 0.06054750201288242), 12: (0.5711666666666667, 0.03596139905818769, 0.5814999999999999, 0.04493328387732194), 13: (0.5475000000000001, 0.025193694096384965, 0.53, 0.028062430400804545), 14: (0.5146666666666666, 0.00958297100764338, 0.5015, 0.03480660856791422), 15: (0.514, 0.009089065469623988, 0.48949999999999994, 0.030999999999999996), 16: (0.5123333333333333, 0.012620530011761692, 0.4925, 0.0207364413533277), 32: (0.5016666666666667, 0.010852547064066456, 0.492, 0.019773719933285167)}
    simpleGCN_BN_TrainTestDataContainer = plot_data_preprocess(simpleGCN_BN_acc_dict, simpleGCN_BN_num_layer, label='simpleGCN_BN')

    # single split simpleGCN hdim 16 from cluster
    simpleGCN_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    simpleGCN_acc_dict = {4: (1.0, 0.0, 1.0, 0.0), 6: (0.9993333333333334, 0.0013333333333333196, 0.999, 0.0020000000000000018), 8: (0.9773333333333334, 0.004927248499698164, 0.9745000000000001, 0.009924716620639618), 10: (0.7788333333333334, 0.015371329733558448, 0.767, 0.019583156027566134), 11: (0.6708333333333334, 0.006168918507773912, 0.6625, 0.013416407864998738), 12: (0.5893333333333334, 0.015233369803019772, 0.5809999999999998, 0.01721917535772257), 13: (0.5551666666666667, 0.00990790929846789, 0.534, 0.018343936327844163), 14: (0.5278333333333334, 0.008491826135237981, 0.4925, 0.013784048752090215), 15: (0.5245, 0.007933753490274599, 0.46900000000000003, 0.01841195263952196), 16: (0.5256666666666666, 0.006041522986797277, 0.462, 0.006000000000000005), 32: (0.5218333333333333, 0.01224064268465234, 0.461, 0.011022703842524295)}
    simpleGCN_TrainTestDataContainer = plot_data_preprocess(simpleGCN_acc_dict, simpleGCN_num_layer, label='simpleGCN')
    # single split GCNII hdim 16 from cluster
    GCNII_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    GCNII_acc_dict = {4: (1.0, 0.0, 1.0, 0.0), 6: (1.0, 0.0, 1.0, 0.0), 8: (1.0, 0.0, 1.0, 0.0), 10: (1.0, 0.0, 1.0, 0.0), 11: (0.999, 0.0020000000000000018, 0.9995, 0.0009999999999999788), 12: (0.5933333333333334, 0.1688580929525013, 0.578, 0.16361081871318903), 13: (0.49883333333333335, 0.005338539126015658, 0.49849999999999994, 0.02101190138945069), 14: (0.49783333333333335, 0.004672615256292064, 0.5005, 0.012489995996796807), 15: (0.49749999999999994, 0.006892024376045098, 0.4995, 0.02735872804060889), 16: (0.497, 0.009015418890865693, 0.48949999999999994, 0.02731300056749531), 32: (0.49050000000000005, 0.0063157651071654745, 0.5135, 0.0196596032513375)}
    GCNII_TrainTestDataContainer = plot_data_preprocess(GCNII_acc_dict, GCNII_num_layer, label='GCNII')
    # single split SGC hdim 16 from cluster
    SGC_BN_n_layer_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    SGC_BN_n_acc_dict = {4: (1.0, 0.0, 1.0, 0.0), 6: (1.0, 0.0, 1.0, 0.0), 8: (1.0, 0.0, 1.0, 0.0), 10: (0.9968333333333333, 0.0009718253158075383, 0.993, 0.00291547594742263), 11: (0.9666666666666666, 0.002635231383473647, 0.9685, 0.004636809247747873), 12: (0.8861666666666667, 0.005666666666666671, 0.89, 0.029664793948382638), 13: (0.7563333333333333, 0.005906681715556456, 0.756, 0.014195069566578379), 14: (0.6541666666666666, 0.009354143466934845, 0.6505, 0.027129319932501065), 15: (0.5974999999999999, 0.008232726023485659, 0.5734999999999999, 0.016852299546352693), 16: (0.5618333333333333, 0.014273129377337768, 0.542, 0.01777638883463116), 32: (0.5189999999999999, 0.012011568497818191, 0.4665, 0.016015617378046958)}
    SGC_BN_n_TrainTestDataContainer = plot_data_preprocess(SGC_BN_n_acc_dict, SGC_BN_n_layer_num_layer, label='SGC_BN_n')

    list_container = [GCN_TrainTestDataContainer, GCN_PN_TrainTestDataContainer,GCN_BN_TrainTestDataContainer,]
    list_container = [GCN_TrainTestDataContainer, GAT_BN_TrainTestDataContainer, GAT_PN_TrainTestDataContainer]
    list_container = [GCN_TrainTestDataContainer, DAGNN_TrainTestDataContainer,APPNP_TrainTestDataContainer,GPRGNN_TrainTestDataContainer,JKNet_TrainTestDataContainer,SGC_TrainTestDataContainer,GCNII_TrainTestDataContainer]
    # list_container = [SGC_TrainTestDataContainer,SGC_BN_TrainTestDataContainer, SGC_PN_by_DGN_TrainTestDataContainer] # TODO since current PN,BN is only for the last layer
    list_container = [GAT_PN_TrainTestDataContainer,GAT_PN_hdim8_TrainTestDataContainer,GAT_PN_hdim64_TrainTestDataContainer]
    list_container = [GCN_fixed_TrainTestDataContainer]
    list_container = [GAT_TrainTestDataContainer,GAT_BN_TrainTestDataContainer,GAT_PN_TrainTestDataContainer]
    list_container = [GAT_BN_separate_TrainTestDataContainer,GAT_BN_TrainTestDataContainer]
    # acc_type_list = ["train","test"]
    acc_type_list = ['train']
    title = "{} accuracy curve with covariance with 16 dim 1000 pairs".format(acc_type_list)
    plot_train_test_accuracy_curve_with_covariance(list_container, save_path="acc_curve1.png",acc_type_list=acc_type_list,title=title)

    # # single split GCN hdim 64
    # GCN_hdim64_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    # GCN_hdim64_accuracy = [1, 1, 1, 1, 0.702500000, 0.600000000, 0.506500000, 0.504500000, 0.500500000, 0.5, 0.5]
    # GCN_hdim64_covariance = [0, 0, 0, 0, 0.242950612, 0.200000000, 0.013000000, 0.009000000, 0.001000000, 0, 0]
    # GCN_hdim64_container = DataContainer(GCN_hdim64_num_layer, GCN_hdim64_accuracy, GCN_hdim64_covariance,
    #                                      label="GCN_hdim64")
    #
    # # single split GCN hdim 128
    #
    #
    # # single split PairnormGCN
    # PairnormGCN_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    # PairnormGCN_accuracy = [1, 1, 1, 0.993250000, 0.972000000, 0.777000000, 0.802500000, 0.839250000, 0.685500000,
    #                         0.495500000, 0.505000000]
    # PairnormGCN_covariance = [0, 0, 0, 0.020250000, 0.061783898, 0.181874957, 0.216685256, 0.201286643, 0.158251382,
    #                           0.006000000, 0.007500000]
    # PairnormGCN_container = DataContainer(PairnormGCN_num_layer, PairnormGCN_accuracy, PairnormGCN_covariance,
    #                                       label="PairnormGCN")
    #
    # # single split GAT
    # GAT_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    # GAT_accuracy = [1.000000000, 1.00000000, 0.983500000, 0.891500000, 0.990500000, 0.850500000, 0.892500000,
    #                 0.795000000, 0.706500000, 0.598000000, 0.500500000]
    # GAT_covariance = [0.000000000, 0.000000000, 0.010198039, 0.195854538, 0.002915476, 0.167163094, 0.196487913,
    #                   0.240920111, 0.235741384, 0.197252376, 0.001000000]
    # GAT_container = DataContainer(GAT_num_layer, GAT_accuracy, GAT_covariance, label="GAT")
    #
    # # single split GAT hdim 64
    # GAT_hdim64_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    # GAT_hdim64_accuracy = [1.000000000, 1, 0.751000000, 0.727500000, 0.661000000, 0.793000000, 0.664000000, 0.582500000,
    #                        0.574000000, 0.501500000, 0.504500000]
    # GAT_hdim64_covariance = [0.000000000, 0.000000000, 0.211101871, 0.185889752, 0.197816834, 0.793000000, 0.181704430,
    #                          0.165000000, 0.148000000, 0.007348469, 0.010295630]
    # GAT_hdim64_container = DataContainer(GAT_hdim64_num_layer, GAT_hdim64_accuracy, GAT_hdim64_covariance,
    #                                      label="GAT_hdim64")
    # single split PairnormGAT
    # PairnormGAT_num_layer = [4,6,8,10,11,12,13,14,15,16,32]
    # PairnormGAT_accuracy = [1,1,1,1,1]
    # PairnormGAT_covariance = [0,0,0,0,0]
    # PairnormGAT_container = DataContainer(PairnormGAT_num_layer, PairnormGAT_accuracy, PairnormGAT_covariance, label="PairnormGAT")

    # single split SGC
    # SGC_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 18, 20, 22, 24, 26, 28, 30, 32]
    # SGC_accuracy = [1, 1, 1, 0.992500000, 0.969000000, 0.891000000, 0.752000000, 0.650000000, 0.579000000, 0.531000000,
    #                 0.486000000, 0.493000000, 0.497500000, 0.500000000, 0.496000000, 0.500500000, 0.500000000,
    #                 0.508500000]
    # SGC_covariance = [0, 0, 0, 0.003162278, 0.004062019, 0.027685736, 0.013820275, 0.027838822, 0.015049917,
    #                   0.012708265, 0.028398944, 0.018934096, 0.024949950, 0.009354143, 0.022781571, 0.019196354,
    #                   0.021965883, 0.010440307]
    # SGC_container = DataContainer(SGC_num_layer, SGC_accuracy, SGC_covariance, label="SGC")
    #
    # # single split SGC hdim 64
    # SGC_hdim64_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 18, 20, 22, 24, 26, 28, 30, 32]
    # SGC_hdim64_accuracy = [1, 1, 1, 1, 1, 0.985500000, 0.893500000, 0.769000000, 0.645000000, 0.482000000, 0.472000000,
    #                        0.516000000, 0.511500000, 0.506500000, 0.494500000, 0.503500000, 0.496500000, 0.486000000]
    # SGC_hdim64_covariance = [0, 0, 0, 0, 0, 0.003316625, 0.012103718, 0.019209373, 0.014747881, 0.024969982,
    #                          0.016537835, 0.023958297, 0.023484037, 0.019532025, 0.005338539, 0.027685736, 0.019786359,
    #                          0.011357817]
    # SGC_hdim64_container = DataContainer(SGC_hdim64_num_layer, SGC_hdim64_accuracy, SGC_hdim64_covariance,
    #                                      label="SGC_hdim64")
    #
    # # single split SGC original
    # SGC_original_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    # SGC_original_accuracy = [1, 1, 1, 0.993000000,0.967500000,0.889000000,0.746500000,0.645500000,0.579000000,0.533000000,0.507500000]
    # SGC_original_covariance = [0, 0, 0, 0.002915476,0.005477226,0.021011901,0.011247222,0.030306765,0.011022704,0.013546217,0.009617692]
    # SGC_original_container = DataContainer(SGC_original_num_layer, SGC_original_accuracy, SGC_original_covariance,
    #                                         label="SGC_original")
    #
    # # single split batchnormSGC
    # batchnormSGC_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    # batchnormSGC_accuracy = [1, 1, 1, 0.992500000, 0.965500000, 0.894500000, 0.753500000, 0.651000000, 0.580000000,
    #                          0.531500000, 0.492500000]
    # batchnormSGC_covariance = [0, 0, 0, 0.003162278, 0.003316625, 0.025268558, 0.016170962, 0.032503846, 0.010000000,
    #                            0.019912308, 0.015411035]
    # batchnormSGC_container = DataContainer(batchnormSGC_num_layer, batchnormSGC_accuracy, batchnormSGC_covariance,
    #                                        label="batchnormSGC")
    #
    # # # single split PairnormSGC # TODO: check the code
    # PairnormSGC_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    # PairnormSGC_accuracy = [1, 1, 1, 0.992500000, 0.969000000, 0.887000000, 0.750000000, 0.651000000, 0.578000000,
    #                         0.531500000, 0.505000000]
    # PairnormSGC_covariance = [0, 0, 0, 0.003162278, 0.004062019, 0.025758494, 0.012449900, 0.027820855, 0.012288206,
    #                           0.019912308, 0.015652476]
    # PairnormSGC_container = DataContainer(PairnormSGC_num_layer, PairnormSGC_accuracy, PairnormSGC_covariance,
    #                                       label="PairnormSGC")
    #
    # # single split JKNet GCN # TODO: check the code
    # JKNet_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    # JKNet_accuracy = [1, 1, 1, 0.887500000, 0.493500000, 0.488000000, 0.490500000, 0.501500000, 0.513500000,
    #                   0.488000000, 0.497500000]
    # JKNet_covariance = [0, 0, 0, 0.225000000, 0.013472194, 0.010885771, 0.012786712, 0.040236799, 0.016477257,
    #                     0.016309506, 0.005700877]
    # JKNet_container = DataContainer(JKNet_num_layer, JKNet_accuracy, JKNet_covariance, label="JKNetGCN")
    #
    # JKNet_train_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    # JKNet_train_accuracy = [1, 1, 1, 0.902166667, 0.503666667, 0.506166667, 0.503833333, 0.499833333, 0.500166667,
    #                         0.511166667, 0.503666667]
    # JKNet_train_covariance = [0, 0, 0, 0.195666667, 0.009480975, 0.005126185, 0.007023769, 0.018313626, 0.005878397,
    #                           0.004169999, 0.003965126]
    # JKNet_train_container = DataContainer(JKNet_num_layer, JKNet_accuracy, JKNet_covariance, label="JKNetGCN_Train")
    #
    # # single split EdgeDrop GCN
    #
    # # single split APPNP
    # APPNP_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    # APPNP_accuracy = [0.995000000, 0.767000000, 0.620000000, 0.548500000, 0.564500000, 0.505500000, 0.505500000,
    #                   0.494500000, 0.496500000, 0.486500000, 0.500500000]
    # APPNP_covariance = [0.010000000, 0.180460522, 0.132693255, 0.036694686, 0.050950957, 0.012884099, 0.007810250,
    #                     0.005787918, 0.004898979, 0.014628739, 0.001000000]
    # APPNP_container = DataContainer(APPNP_num_layer, APPNP_accuracy, APPNP_covariance, label="APPNP")
    #
    # # single split DAGNN
    # DAGNN_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    # DAGNN_accuracy = [1, 1, 1, 1, 1, 1, 1, 0.957000000, 0.689000000, 0.460000000, 0.488500000]
    # DAGNN_covariance = [0, 0, 0, 0, 0, 0, 0, 0.086000000, 0.251030875, 0.026598872, 0.010074721]
    # DAGNN_container = DataContainer(DAGNN_num_layer, DAGNN_accuracy, DAGNN_covariance, label="DAGNN")
    #
    # # single split # TODO: check the code
    # GCNII_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 32]
    # GCNII_accuracy = [1, 1, 1, 1, 1, 0.632500000, 0.482000000, 0.503500000, 0.502500000, 0.495500000, 0.483000000]
    # GCNII_covariance = [0, 0, 0, 0, 0, 0.156468847, 0.019455076, 0.022781571, 0.007416198, 0.014177447, 0.015198684]
    # GCNII_container = DataContainer(GCNII_num_layer, GCNII_accuracy, GCNII_covariance, label="GCNII")
    #
    #
    # # single split GCN
    # GCN_num_layer = [4, 6, 8, 10, 11, 12, 13, 14, 16, 32]
    # GCN_accuracy = [1, 1, 1, 1, 0.924000000, 0.799, 0.599, 0.5, 0.5, 0.5]
    # GCN_covariance = [0, 0, 0, 0, 0.152000000, 0.246178797, 0.200521819, 0, 0, 0]
    # GCN_container = DataContainer(GCN_num_layer, GCN_accuracy, GCN_covariance, label="GCN")
    #
    #
    # list_container = [GCN_container,PairnormGCN_container,GAT_container,SGC_container,JKNet_container,GCNII_container,APPNP_container,DAGNN_container,batchnormSGC_container,PairnormSGC_container]
    # list_container = [GCN_container,JKNet_container,JKNet_train_container]
    # list_container = [GCN_container,GCN_hdim64_container]
    # list_container = [GCN_container,GCN_hdim64_container,GAT_container,GAT_hdim64_container]
    # list_container = [SGC_container,SGC_hdim64_container]

    # plot_accuracy_curve_with_covariance(list_container, save_path="acc_curve.png")
